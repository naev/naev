language: c

git:
    submodules: false

os:
- linux
- osx
- windows

dist: bionic
osx_image: xcode9.4

addons:
    apt:
        packages:
        - build-essential
        - automake
        - libsdl2-dev
        - libsdl2-mixer-dev
        - libsdl2-image-dev
        - libgl1-mesa-dev
        - libxml2-dev
        - libfontconfig1-dev
        - libfreetype6-dev
        - libpng-dev
        - libopenal-dev
        - libvorbis-dev
        - binutils-dev
        - libzip-dev
        - libiberty-dev
        - libluajit-5.1-dev
        - luarocks
        - gettext
        - autopoint
        - intltool
    homebrew:
        update: true
        packages:
        - sdl2
        - sdl2_mixer
        - sdl2_image
        - fontconfig
        - freetype
        - libpng
        - libvorbis
        - libzip
        - luajit
        - gettext
        - intltool
        - openal-soft

before_install:
- |-
    case $TRAVIS_OS_NAME in
      osx)
        export MAKE=make
        ;;
      linux)
        export MAKE=make
        ;;
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c \$\* --"
        export msys2+=" -msys2 -c \$\* --"
        $msys2 pacman --sync --noconfirm --needed \
                mingw-w64-x86_64-libtool \
                mingw-w64-x86_64-toolchain \
                mingw-w64-x86_64-gcc \
                mingw-w64-x86_64-SDL2 \
                mingw-w64-x86_64-SDL2_mixer \
                mingw-w64-x86_64-SDL2_image \
                mingw-w64-x86_64-libxml2 \
                mingw-w64-x86_64-libpng \
                mingw-w64-x86_64-openal \
                mingw-w64-x86_64-libvorbis \
                mingw-w64-x86_64-binutils \
                mingw-w64-x86_64-freetype \
                mingw-w64-x86_64-libzip \
                mingw-w64-x86_64-gettext \
                mingw-w64-x86_64-luajit \
                libtool \
                autoconf \
                automake \
                automake-wrapper \
                git \
                gettext \
                pkgconfig \
                make \
                intltool
        export PATH=/mingw64/bin:$PATH
        export MAKE=mingw32-make
        ;;
    esac 
- export GIT=git
- gcc --version
- $MAKE --version
- $GIT --version

install:
- export MAKEFLAGS=" -j2"

script:
- |-
    case $TRAVIS_OS_NAME in
      osx)
        ./autogen.sh
        ./configure --disable-dependency-tracking --disable-debug
        $MAKE $MAKEFLAGS
        ;;
      linux)
        ./autogen.sh
        ./configure --disable-dependency-tracking --disable-debug
        $MAKE $MAKEFLAGS
        ;;
      windows)
        $mingw64 ./extras/win_installer/build_windows.sh
        ;;
    esac
    
before_deploy:
- |-
    ./config.status --file .travis/bintray.json
    case $TRAVIS_OS_NAME in
      osx)
        zip -9r .travis/naev-macos.zip Naev.app
        ;;
      linux)
        gzip -9 < src/naev > ".travis/naev-linux$BITS.gz"
        ;;
      windows)
        echo "Don't know how to deploy this target! (yet)"
        ;;
    esac

#deploy:
#  - provider: bintray
#    file: .travis/bintray.json
#    skip_cleanup: true
#    user: stephank
#    key:
#      secure: "GWamsTqHNn0sb+ON+OOESSOwmxBeCyYGyId83IWluHtbvb0kZjVWVoZ2ZiGwo7uFwaPM25SpFneGLlXwsEe2KMEs/pLUDzucfGWErIp1Y0MYh6VXrzyFZa2Vsa7nNDZhAP2u1bvrG6Er3gxLGqfSy6X4YnGTg67Frt823nbdKAs="
#  - provider: script
#    script: .travis/deploy.sh
#    skip_cleanup: true
#    on:
#      condition: "$TRAVIS_OS_NAME = linux"
