[package]
name = @NAME@
version = @VERSION@
edition.workspace = true
rust-version.workspace = true
publish = false
build = "@BUILD@/build.rs"

[lints]
workspace = true

[lib]
path = @PATH@

[profile.release-with-debug]
inherits = "release"
debug = 1
debug-assertions = true
overflow-checks = true

[workspace]
resolver = "3"
members = [
   "@BUILD@/src/audio",
   "@BUILD@/src/core",
   "@BUILD@/src/log",
   "@BUILD@/src/gettext",
   "@BUILD@/src/mutex",
   "@BUILD@/src/ndata",
   "@BUILD@/src/renderer",
   "@BUILD@/src/toolkit",
]

[workspace.package]
version = @VERSION@
edition = "2024"
# 1.80 LazyLock
# 1.84 New random syntax
# 1.85 Rust 2024
# 1.87 str::from_utf8, nalgebra 0.34
rust-version = "1.87" # Note this has to be set in meson.build too!

[workspace.lints.clippy]
not_unsafe_ptr_arg_deref = "allow"

[workspace.dependencies]
naevc = { path=@NAEVC@ }
sdl3 = "0.15"
anyhow = "1.0"
audio = { path="@BUILD@/src/audio" }
naev_core = { path="@BUILD@/src/core" }
gettext = { path="@BUILD@/src/gettext" }
log = { path="@BUILD@/src/log" }
mutex = { path="@BUILD@/src/mutex" }
ndata = { path="@BUILD@/src/ndata" }
renderer = { path="@BUILD@/src/renderer" }
toolkit = { path="@BUILD@/src/toolkit" }
physics = { path="@BUILD@/src/physics" }
formatx = "0.2"
glow = "0.16"
nalgebra = { version = "0.34", features = ["bytemuck", "encase"] }
encase = { version = "0.12" } # Needed for shader voodoo
bytemuck = { version = "1.23", features = ["derive"] } # Needed for shader voodoo
image = { version = "0.25", features = ["rayon"] }
mlua = { version = "0.11", features = ["luajit", "anyhow", "send", "serialize", "macros"] }
roxmltree = "0.21"
symphonia = "0.5"
thunderdome = "0.6"
static_assertions = "1.1"
tracing-mutex = "0.3"
derive_more = { version = "2", features = ["from", "into", "mul", "add", "add_assign", "mul_assign"] }
palette = "0.7" # Colour conversion
trie-rs = { version = "0.4" }
softfloat = "1.0"

[dependencies]
audio = { workspace = true }
naevc = { workspace = true }
naev_core = { workspace = true }
gettext = { workspace = true }
log = { workspace = true }
mutex = { workspace = true }
ndata = { workspace = true }
anyhow = { workspace = true }
formatx = { workspace = true }
sdl3 = { workspace = true }
renderer = { workspace = true }
glow = { workspace = true }
nalgebra = { workspace = true }
bytemuck = { workspace = true }
encase = { workspace = true }
roxmltree = { workspace = true }
image = { workspace = true }
physics = { workspace = true }
mlua = { workspace = true }
thunderdome = { workspace = true }
derive_more = { workspace = true }
constcat = "0.6"
rand = "0.9"
rayon = "1.11" # parallel computation
static_assertions = "1.1"
palette = { workspace = true }
serde_yaml2 = "0.1"
# gltf-rs crate doesn't support WEBP in any release atm...
gltf = { git = "https://github.com/gltf-rs/gltf.git", rev = "12fc1b7ce28c7b4c6d1b881a30df24060dccfbda", features = ["extras", "names", "utils", "EXT_texture_webp", "KHR_materials_emissive_strength"] }
#gltf = { version = "1", features = ["extras", "names", "utils"] }
colored = "3"
regex = "1.11"

# Probably useful
#etagere = "0" # Texture Atlas generation
